

-- CREATE TABLE SCOTT.TEST (A1 VARCHAR2(20), A2 VARCHAR2(20));

---- TEST1
CREATE OR REPLACE PROCEDURE SCOTT.P_TEST_1
as 
begin 

	INSERT INTO TEST(A1, A2) VALUES('1', '2' );
	COMMIT;
	DBMS_OUTPUT.PUT_LINE('SUCCES');

end P_TEST_1;

---- TEST2
CREATE OR REPLACE PROCEDURE SCOTT.P_TEST_2 (V1 in SCOTT.TEST.A1%type DEFAULT '3', V2 in SCOTT.TEST.A2%type DEFAULT '4')
as 
begin 
	DBMS_OUTPUT.PUT_LINE('V1: ' || V1 || ', V2: ' || V2);
	INSERT INTO TEST(A1, A2) VALUES(V1, V2);
	COMMIT;
	DBMS_OUTPUT.PUT_LINE('SUCCES');

end P_TEST_2;

BEGIN
 SCOTT.P_TEST_2 ('20', '40');
END;

---- TEST3
CREATE OR REPLACE PROCEDURE SCOTT.P_TEST_3 
(V1 in VARCHAR2 DEFAULT '3', V2 in VARCHAR2 DEFAULT '4', V3 out number)
as 
begin 
	DBMS_OUTPUT.PUT_LINE('V1: ' || V1 || ', V2: ' || V2);
-- 	SELECT TO_NUMBER(V1) + TO_NUMBER(V2) INTO V3 FROM DUAL; -- 可以这种方式编写
	V3 := TO_NUMBER(V1) + TO_NUMBER(V2); -- 可以这种方式编写
-- 	V3 := 2; -- 可以这种方式编写
	INSERT INTO TEST(A1, A2) VALUES(V1, V2);
	COMMIT;
	DBMS_OUTPUT.PUT_LINE('SUCCES');

end P_TEST_3;

DECLARE 
 V3 NUMBER;
BEGIN
	SCOTT.P_TEST_3('50', '20', V3=>V3);
-- 	SCOTT.P_TEST_3(V3=>V3);
	DBMS_OUTPUT.PUT_LINE(V3);
END;


SELECT * FROM SCOTT.TEST ORDER BY TO_NUMBER(A1), TO_NUMBER(A2);

BEGIN
	FOR FOR_TMP IN (SELECT A1, A2 FROM SCOTT.TEST ORDER BY TO_NUMBER(A1), TO_NUMBER(A2))
	LOOP
		DBMS_OUTPUT.PUT_LINE(lpad(FOR_TMP.A1, 3, '0') || '  ' || lpad(FOR_TMP.A2, 4, '0'));
	END LOOP;
END;








